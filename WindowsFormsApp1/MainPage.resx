<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας Λογισμικού, των Γραφικών και της Εικονικής Πραγματικότητας, της Τεχνητής Νοημοσύνης και των Ευφυών Συστημάτων, της Αναγνώρισης Προτύπων και Μηχανικής Μάθησης, Πολυμέσων καθώς και από τις πλέον προηγμένες τεχνικές Επικοινωνίας Ανθρώπου-Υπολογιστή. Η κατεύθυνση αυτή φιλοδοξεί να προσφέρει στους προπτυχιακούς φοιτητές αφ’ ενός το απαραίτητο υπόβαθρο, αφ’ ετέρου τις ιδιαίτερες τεχνικές γνώσεις ώστε να μπορούν να ανταποκριθούν αναπτυξιακά και ερευνητικά στην ευρύτερη περιοχή των σύγχρονων και προηγμένων τεχνικών ανάπτυξης λογισμικού.</value>
  </data>
  <data name="label27.Text" xml:space="preserve">
    <value>1. Καλές επικοινωνιακές δεξιότητες: Η ικανότητα να επικοινωνείτε αποτελεσματικά με άλλους
προγραμματιστές, μηχανικούς και πελάτες είναι κρίσιμη για την αποτελεσματική συνεργασία και την
επίλυση προβλημάτων.
2. Ομαδικό πνεύμα: Η ικανότητα να εργάζεστε σε ομάδα και να συνεισφέρετε στο κοινό στόχο είναι
σημαντική για την επιτυχημένη ανάπτυξη λογισμικού.
3. Προσαρμοστικότητα: Η ικανότητα να προσαρμόζεστε σε νέες τεχνολογίες
4. Κριτική σκέψη: Η ικανότητα να αξιολογείτε και να αναλύετε κριτικά προβλήματα και καταστάσεις βοηθά
στη λήψη ορθών αποφάσεων και τη βελτίωση του λογισμικού.
5. Διαχείριση χρόνου: Η ικανότητα να οργανώνετε και να διαχειρίζεστε αποτελεσματικά τον χρόνο σας
είναι σημαντική για την εκπλήρωση προθεσμιών και την αποτελεσματική παράδοση των έργων.
6. Επίλυση προβλημάτων: Η ικανότητα να αναγνωρίζετε προβλήματα και να βρίσκετε καινοτόμες λύσεις
είναι ουσιώδης για την ανάπτυξη υψηλής ποιότητας λογισμικού.
7. Ηθική: Η συνειδητοποίηση των ηθικών προκλήσεων και η δεοντολογική συμπεριφορά είναι σημαντικές
για τη διασφάλιση της ασφάλειας και της ιδιωτικότητας των χρηστών.
8. Διαπροσωπικές δεξιότητες: Η ικανότητα να αλληλεπιδράτε με άλλους ανθρώπους, να επικοινωνείτε
αποτελεσματικά και να εργάζεστε σε ομάδα </value>
  </data>
  <data name="label43.Text" xml:space="preserve">
    <value>Όπως σε όλους τους τομείς, έτσι και στην τομέα της πληροφορικής απαιτούνται κάποιες δεξιότητες.Πιο συγκεκριμένα, παρακάτω παρουσιάζεται μία λίστα από softskills και hardskills τα οποία
καλό θα ήταν να τα διαθέτει ένας φοιτητής πληροφορικής κατά την αποφοίτησή του από το τμήμα, εφόσον βέβαια έχει επαγγελματικές αξιώσεις. 
Είναι σημαντικό να σημειωθεί ότι η λίστα αυτή δεν είναι απολύτως πλήρης και οι απαιτούμενες δεξιότητες μπορεί να διαφέρουν ανάλογα με την ειδικότητα και τη θέση εργασίας στον τομέα της πληροφορικής.</value>
  </data>
  <data name="label29.Text" xml:space="preserve">
    <value>1. Γνώση προγραμματισμού: Καλή κατανόηση και εμπειρία σε γλώσσες προγραμματισμού, όπως Python, Java, C++, που
χρησιμοποιούνται για την ανάπτυξη λογισμικού Τεχνητής Νοημοσύνης.
2. Αναγνώριση Προτύπων και Μηχανική Μάθηση: Κατανόηση των αλγορίθμων μηχανικής μάθησης και της σχετικής θεωρίας για
την ανάπτυξη μοντέλων μηχανικής μάθησης και αναλύσεων δεδομένων.
3. UML ( Γλώσσα Μοντελοποίησης): Κατανόηση και εμπειρία στη χρήση της UML για την καταγραφή, τον σχεδιασμό και την
ανάπτυξη λογισμικών συστημάτων. Η UML παρέχει κοινή γλώσσα και γραφικά εργαλεία για την ανάπτυξη και τον σχεδιασμό
συστημάτων.
4. UX Design (Σχεδιασμός Χρήσης): Κατανόηση των αρχών σχεδιασμού χρήσης και της διαδικασίας σχεδίασης ευχάριστων και
ευαίσθητων στον χρήστη διεπαφών. Αυτό περιλαμβάνει την κατανόηση των αναγκών των χρηστών, τη δημιουργία
πρωτοτύπων (prototypes) και την αξιολόγηση της χρηστικότητας του λογισμικού.
5. Ανάλυση και σχεδιασμός Λογισμικού: Κατανόηση και εμπειρία στην ανάλυση απαιτήσεων λογισμικού και τον σχεδιασμό
λογισμικών αρχιτεκτονικών. Αυτό περιλαμβάνει την αναγνώριση τσυστατικών του συστήματος, τον σχεδιασμό των λειτουργιών
και των διεπαφών του λογισμικού, καθώς και τον καθορισμό των δομικών και λειτουργικών απαιτήσεων. Η ανάλυση και
σχεδιασμός λογισμικού είναι σημαντικές δεξιότητες για την κατανόηση και την ανάπτυξη ποιοτικού και αποτελεσματικού
λογισμικού.
6. Ανάλυση δεδομένων: Κατανόηση των αλγορίθμων ανάλυσης δεδομένων και εξόρυξης πληροφορίας για την αντιμετώπιση
μεγάλων όγκων δεδομένων και την εξαγωγή συμπερασμάτων.
7. Νευρωνικά Δίκτυα: Κατανόηση των αρχών και των αλγορίθμων που βασίζονται σε νευρωνικά δίκτυα, όπως τα συνελικτικά
νευρωνικά δίκτυα και τα αναδρομικά νευρωνικά δίκτυα.
8. Επεξεργασία Φυσικής Γλώσσας : Κατανόηση τεχνικών επεξεργασίας φυσικής γλώσσας</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>1. Προγραμματιστικές δεξιότητες: Οι μηχανικοί ενδυνάμωσης λογισμικού χρειάζεται να είναι ικανοί προγραμματιστές με εμπειρία σε γλώσσες προγραμματισμού όπως Python,
Java, C++, ή R. Πρέπει να μπορούν να υλοποιούν αλγορίθμους μηχανικής μάθησης, νευρωνικά δίκτυα και άλλες τεχνικές τεχνητής νοημοσύνης.
2. Γνώση της Τεχνητής Νοημοσύνης: Οι μηχανικοί ενδυνάμωσης λογισμικού με τεχνητή νοημοσύνη πρέπει να έχουν βαθιά κατανόηση των θεμελιωδών αρχών, μεθόδων και αλγορίθμων
της τεχνητής νοημοσύνης, όπως μηχανική μάθηση,βαθιά μάθηση, νευρωνικά δίκτυα, αναγνώριση προτύπων, εκτίμηση και ενσωμάτωση της νοημοσύνης σε λογισμικά.
3. Δεδομενοκεντρικές δεξιότητες: Οι μηχανικοί ενδυνάμωσης λογισμικού με τεχνητή νοημοσύνη πρέπει να είναι ικανοί να διαχειρίζονται και να αναλύουν μεγάλους όγκους δεδομένων. 
Αυτό περιλαμβάνει τη συλλογή, τον καθαρισμό, την προεπεξεργασία και την ανάλυση δεδομένων για την εκπαίδευση και αξιολόγηση μοντέλων μηχανικής μάθησης.
4. Κατανόηση των εφαρμογών: Οι μηχανικοί ενδυνάμωσης λογισμικού πρέπει να έχουν κατανόησητης Τεχνολογίας Λογισμικού και των εφαρμογών της τεχνητής νοημοσύνης σε διάφορους τομείς, 
όπως η εικόνα και ο ήχος, η επεξεργασία φυσικής γλώσσας, η αυτόνομη πλοήγηση, η αυτοματοποίηση και πολλά άλλα. Πρέπει να μπορούν να εφαρμόσουν τεχνικές τεχνητής νοημοσύνης
για την επίλυση πρακτικών προβλημάτων.</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>• Το επάγγελμα των Μηχανικών Ενδυνάμωσης Λογισμικού με Τεχνητή Νοημοσύνη θεωρείται ένα από τα πιο ανεπτυγμένα και αναπτυσσόμενα πεδία στον τομέα της
τεχνολογίας και του λογισμικού. Η Τεχνητή Νοημοσύνη αποκτά όλο και μεγαλύτερη σημασία σε πολλούς τομείς, όπως η ρομποτική, η αυτοματοποίηση, η ιατρική, η
αυτόνομη οδήγηση, η ανάλυση δεδομένων και άλλοι. Λόγω της αυξανόμενης ζήτησης για εξειδικευμένους μηχανικούς ενδυνάμωσης λογισμικού με τεχνητή νοημοσύνη, το
επάγγελμα αυτό προσφέρει πολλές ευκαιρίες για μελλοντική απασχόληση και επαγγελματική ανάπτυξη. Οι τεχνολογικές εξελίξεις στον τομέα της τεχνητής νοημοσύνης
δημιουργούν συνεχώς νέες προκλήσεις και ευκαιρίες για τους επαγγελματίες αυτού του πεδίου.</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>1. Γνώσεις προγραμματισμού: Απαιτείται εξοικείωση με τουλάχιστον ένα ή περισσότερα γλώσσες προγραμματισμού, όπως Java, C++, Python, JavaScript, κ.λπ. 
Οι μηχανικοί λογισμικού πρέπει να έχουν βαθιά κατανόηση των αλγορίθμων, των δομών δεδομένων και των αρχών της λογικής προγραμματισμού.
2. Σχεδίαση και αρχιτεκτονική λογισμικού: Οι μηχανικοί λογισμικού πρέπει να είναι εξοικειωμένοι με τις αρχές και τις πρακτικές ανάλυσης και σχεδίασης
λογισμικού (π.χ. UML) και να μπορούν να δημιουργήσουν αρχιτεκτονικές λογισμικού που είναι αποτελεσματικές, επεκτάσιμες και ευέλικτες.
3. Εμπειρία στον τομέα: Συχνά απαιτείται να έχουν προηγούμενη εμπειρία εργασίας σε αντίστοιχες θέσεις ή σε σχετικά έργα.</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>1. Γνώσεις προγραμματισμού: Απαιτείται εξοικείωση με τουλάχιστον ένα ή περισσότερα γλώσσες προγραμματισμού, όπως Java, C++, Python, JavaScript, κ.λπ. 
Οι προγραμματιστές πρέπει να έχουν καλή κατανόηση των αλγορίθμων και των δομών δεδομένων.
2. Σχεδίαση και αρχιτεκτονική λογισμικού: Οι μηχανικοί λογισμικού πρέπει να είναι εξοικειωμένοι με τις αρχές και τις πρακτικές σχεδίασης λογισμικού (π.χ.UML) 
και να μπορούν να δημιουργήσουν αρχιτεκτονικές λογισμικού που είναι αποτελεσματικές, επεκτάσιμες και ευέλικτες.
3. Ανάπτυξη λογισμικού και προγραμματιστικά εργαλεία: Απαιτείται ικανότητα στην ανάπτυξη λογισμικού με χρήση πλατφορμών και εργαλείων ανάπτυξης 
όπως IDEs (περιβάλλοντα ανάπτυξης εφαρμογών)
4. Εμπειρία στον τομέα: Συχνά απαιτείται να έχουν προηγούμενη εμπειρία εργασίας σε αντίστοιχες θέσεις ή σε σχετικά έργα λογισμικού. 
Οι εργοδότες μπορεί να απαιτούν συγκεκριμένα χρόνια εμπειρίας.</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>Η ταχύτατη εξέλιξη των υπολογιστών, που σηματοδοτείται από αυξημένη υπολογιστική ισχύ, αυξημένη χωρητικότητα μνήμης και εξειδικευμένες περιφερειακές συσκευές, έχει επιτρέψει τη διάδοση προηγμένων και απαιτητικών προγραμματιστικών τεχνικών, ακόμα και σε επίπεδο προσωπικού υπολογιστή. Οι τεχνικές αυτές θεραπεύονται από τα επιστημονικά πεδία της Τεχνολογίας</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Μερικά βασικά μαθήματα πληροφορικής:

• Τεχνολογία Λογισμικού
• Σύγχρονα θέματα Τεχνολογίας Λογισμικού και κινητών τηλεφώνων
• Αλληλεπίδραση Ανθρώπου Υπολογιστή
• Αναγνώριση Προτύπων
• Τεχνητή Νοημοσύνη
• Βάσεις Δεδομένων
• C /C++
• JAVA
• C#
• PYTHON</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>